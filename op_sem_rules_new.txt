

F(x,...,xn) = e
G(y,...,yn) = e




------------------------------------------------Rules-------------------------------------------------------

D, rho |- e => v


-------------------Lit
D, rho |- v => v


(x,v) in rho
------------------LocalVar
D, rho |- x => v


(x,e) in D     D, [] |- e => v
-----------------------------------GlobalVar
D, rho |- x => v


D, rho |- e1 => v1      D, rho |- e2 => v2       op(v1,v2) = v
------------------------------------------------------------------Op
D, rho |- e1 op e2 => v


-----------------------------------------------Abs
D, rho |- \x -> e => (closure x -> e, rho)


D, rho |- e1 => (closure x -> e',rho')     D, rho |- e2 => v2      D, rho'[x |-> v2] |- e' => v
---------------------------------------------------------------------------------------------------App
D, rho |- e1 e2 => v


D, rho |- e1 => v'     D, rho[x |-> v'] |- e2 => v
------------------------------------------------------Let
D, rho |- let x = e1 in e2 => v


D, rho |- e1 => True    D, rho |- e1 => v1
-----------------------------------------------IfTrue
D, rho |- if e1 then e2 else e3 => v1


D, rho |- e1 => False    D, rho |- e2 => v2
-----------------------------------------------IfFalse
D, rho |- if e1 then e2 else e3 => v2







------------------------------------------------------Explanation Rules---------------------------------------

X { D, rho |- e => v | (e => v)* }


-----------------------XLit
X{ D, rho |- v => v | [] }


(x,v) in rho
----------------------------XVar
X{ D, rho |- x => v | [] }


-----------------------------------XGlobalVar
X{ D, rho |- f => v | }


?????? START
---------------------------------------------------   <---- probably need this rule
X{ D, rho |- e => (closure x -> e',rho') | [] }

flip sub x y = y - x
flip sub => \x y -> y - x

---------------------------------------------------
X{ D, rho |- e => (closure x -> e',rho') | e => ? maybe something in the premises }

(f,...) , (g,...) in D
----------------------------------------------------
X{ D, rho |- f g => v | f g => v}
?????? END


D, rho |- e1 => v'     D, rho[x |-> v'] |- e2 => v 
----------------------------------------------------------XLetVal
X{ D, rho |- let x = e1 in e2 => v | [v'/x]e2 => v}

D, rho |- e1 => v'     v' = (closure y -> e')     D, rho[x |-> v'] |- e2 => v 
-----------------------------------------------------------------------------------XLetClosure
X{ D, rho |- let x = e1 in e2 => v | e2 => v }




X{ D, rho |- e1 => v' | e1' => v' }    X{ D, rho[x |-> v'] |- e2 => v | e2' => v }       x must not be free in e2'
--------------------------------------------------------------------------------------------------------------------XLetVal(XPrem)
X{ D, rho |- let x = e1 in e2 => v | e1' => v', e2' => v}


X{ D, rho |- e1 => v' | [] }     v' = (closure y -> e')     X{ D, rho[x |-> v'] |- e2 => v | e2' => v : XS}
-----------------------------------------------------------------------------------XLetClosure(XPrem)
X{ D, rho |- let x = e1 in e2 => v | e2' => v : XS }






P{ e1 => \x -> e' }     e2 e3 => v     [v/x]e' => w
-------------------------------------------------------APP-X-INTROS
X{ e1 (e2 e3) => w | e1 v => w, e2 e3 => v }

P{ e1 => \x -> e' }     X{ e2 e3 => v | Delta}     [v/x]e' => w
------------------------------------------------------------------APP-X-ACC
X{ e1 (e2 e3) => w | e1 v => w, e2 e3 => v, Delta }




-------------------------------------------------------APP-X-INTROS
X{ D, rho |- e1 (e2 e3) => w |  }



----------------------------------------------------------------------
X{ {}, [] |- let x = 5 in let y = 3 in x + y => 10 | ? }


---------------------------------------------------------
X{ {}, [] |- let x = 5 in x + x => 10 | 5 + 5 => 10 }




x = 10

f = \x -> x + 1

D = {x |-> 10, f |-> \x -> x + 1}

------------------------------------------------Abs
D, [] |- \x -> x + 1 => (closure x -> x + 1, [])         (f,\x -> x + 1) in D
------------------------------------------------------------------------------GlobalVar                                ----------------------------
D, [] |- f => (closure x -> x + 1, [])                                              D, [] |- 5 => 5                    D, [][x |-> 5] |- x + 1 => 6
-----------------------------------------------------------------------------------------------------App
D , [] |- f 5 => 6



(x,10) in D       {x |-> 10}, [] |- 10 => 10
---------------------------------------------------
{x |-> 10}, [] |- x => 10








